@model IEnumerable<BLL.Product>
@using VirtusFitWeb.Controllers;


@{
    ViewData["Title"] = "Search Results";
}
<style>
    .btn-info {
        background-color: rgb(28, 92, 51);
        border-color: rgb(28, 92, 51);
    }

        .btn-info:hover {
            background-color: rgb(67, 132, 36);
            border-color: rgb(67, 132, 36);
        }

    .btn-primary:hover {
        background-color: rgb(36, 69, 169);
        border-color: rgb(36, 69, 169);
    }
</style>
<h1>Search Results</h1>
<hr />
@{
    if (Model == null)
    {
        <p>There was an error during search operation. Please try again later.</p>
    }
    else
    {
        var productList = (List<BLL.Product>)Model;
        if (productList.Count == 0)
        {
            <p>There were no products matching given criteria.</p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.ProductId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ProductName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Energy)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Fat)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Carbohydrates)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Protein)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Salt)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Fiber)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Sugar)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Quantity)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PortionQuantity)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PortionUnit)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.ProductId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ProductName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Energy)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Fat)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Carbohydrates)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Protein)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Salt)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Fiber)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Sugar)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Quantity)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PortionQuantity)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PortionUnit)
                            </td>
                            <td>
                                @if (item.IsFavourite == false)
                                {
                                    <a asp-controller="Product" asp-action="AddToFavorites" asp-route-id=@item.ProductId><i class="fa fa-star" style="font-size: 36px; color: black"></i></a>
                                }
                                else
                                {
                                    <a asp-controller="Product" asp-action="DeleteFromFavorites" asp-route-id=@item.ProductId><i class="fa fa-star" style="font-size: 36px; color: orange"></i></a>
                                }
                            </td>
                            <td>
                                <a class="btn btn-info btn-block" asp-controller="Product" asp-action="Details" asp-route-id=@item.ProductId>Details</a>
                                <a class="btn btn-danger btn-block" asp-controller="Product" asp-action="DeleteConfirm" asp-route-id=@item.ProductId>Delete</a>
                                <a class="btn btn-primary btn-block" asp-controller="Product" asp-action="Edit" asp-route-id=@item.ProductId>Edit</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
    <div>
        <a class="btn btn-info btn-block" asp-action="SearchByCarbohydrates" asp-controller="Product">Back to Search by Carbohydrates</a>
    </div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
