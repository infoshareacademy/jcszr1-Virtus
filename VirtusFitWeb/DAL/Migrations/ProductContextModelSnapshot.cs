// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VirtusFitWeb.DAL;

namespace VirtusFitWeb.DAL.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class ProductContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BLL.BlockedUser", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Email");

                    b.ToTable("BlockedUsers");
                });

            modelBuilder.Entity("BLL.DailyDietPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CaloriesSum")
                        .HasColumnType("int");

                    b.Property<double>("CarbohydratesSum")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayNumber")
                        .HasColumnType("int");

                    b.Property<int>("DietPlanId")
                        .HasColumnType("int");

                    b.Property<double>("FatSum")
                        .HasColumnType("float");

                    b.Property<double>("ProteinSum")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DietPlanId");

                    b.ToTable("DailyDietPlans");
                });

            modelBuilder.Entity("BLL.Db_Models.ProductInDietPlanDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DailyDietPlanId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPortions")
                        .HasColumnType("int");

                    b.Property<int>("OrdinalNumber")
                        .HasColumnType("int");

                    b.Property<int>("PortionSize")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("TotalCalories")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductsInDietPlans");
                });

            modelBuilder.Entity("BLL.DietPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CaloriesPerDay")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlanNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DietPlans");
                });

            modelBuilder.Entity("BLL.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Carbohydrates")
                        .HasColumnType("float");

                    b.Property<int>("Energy")
                        .HasColumnType("int");

                    b.Property<double>("Fat")
                        .HasColumnType("float");

                    b.Property<int>("Fiber")
                        .HasColumnType("int");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("bit");

                    b.Property<int>("PortionQuantity")
                        .HasColumnType("int");

                    b.Property<string>("PortionUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("ProductNo")
                        .HasColumnType("int");

                    b.Property<double>("Protein")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("Salt")
                        .HasColumnType("float");

                    b.Property<int>("Sugar")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Carbohydrates = 37.5,
                            Energy = 179,
                            Fat = 0.20999999999999999,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 50,
                            PortionUnit = "g",
                            ProductName = "Bio Spaghetti ",
                            ProductNo = 0,
                            Protein = 5.5,
                            Quantity = 500,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 2,
                            Carbohydrates = 1.1299999999999999,
                            Energy = 181,
                            Fat = 13.5,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 75,
                            PortionUnit = "g",
                            ProductName = "Naturaplan Mozzarella",
                            ProductNo = 0,
                            Protein = 14.25,
                            Quantity = 150,
                            Salt = 0.38,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 3,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "g",
                            ProductName = "Caffè Mauro - Roasted organic coffee blend",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 1000,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 4,
                            Carbohydrates = 0.75,
                            Energy = 197,
                            Fat = 15.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 75,
                            PortionUnit = "g",
                            ProductName = "Naturaplan Bio Mozzarella ",
                            ProductNo = 0,
                            Protein = 15.0,
                            Quantity = 450,
                            Salt = 0.29999999999999999,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 5,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "g",
                            ProductName = "LEAVITT'S AMERICANA, Fancy Mixed Nuts",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 284,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 6,
                            Carbohydrates = 0.80000000000000004,
                            Energy = 124,
                            Fat = 10.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 50,
                            PortionUnit = "g",
                            ProductName = "Vieniese Sausages",
                            ProductNo = 0,
                            Protein = 8.0,
                            Quantity = 200,
                            Salt = 0.90000000000000002,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 7,
                            Carbohydrates = 1.5,
                            Energy = 184,
                            Fat = 16.199999999999999,
                            Fiber = 4,
                            IsFavorite = false,
                            PortionQuantity = 30,
                            PortionUnit = "g",
                            ProductName = "Naturaplan Bio whole Almonds ",
                            ProductNo = 0,
                            Protein = 6.5999999999999996,
                            Quantity = 200,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 8,
                            Carbohydrates = 0.42999999999999999,
                            Energy = 103,
                            Fat = 9.0299999999999994,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 43,
                            PortionUnit = "g",
                            ProductName = "Naturaplan Cipollata veal",
                            ProductNo = 0,
                            Protein = 5.1600000000000001,
                            Quantity = 150,
                            Salt = 0.72999999999999998,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 9,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "g",
                            ProductName = "Jean Hervé - Almond Purée",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 700,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 10,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 15,
                            PortionUnit = "g",
                            ProductName = "Raw health Bio - White Chia Seeds ",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 450,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 11,
                            Carbohydrates = 7.0999999999999996,
                            Energy = 59,
                            Fat = 2.5,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 100,
                            PortionUnit = "g",
                            ProductName = "PANZANI",
                            ProductNo = 0,
                            Protein = 1.3,
                            Quantity = 400,
                            Salt = 1.1799999999999999,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 12,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "ml",
                            ProductName = "Lou mas: Sunflower oil",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 1000,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 13,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "g",
                            ProductName = "Barilla: the Pesti, red pesto",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 200,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 14,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "g",
                            ProductName = "Barilla: the Pesti, Calabrian",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 190,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 15,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "ml",
                            ProductName = "Belle France: cider vinegar, Normandy",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 750,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 16,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "ml",
                            ProductName = "granini: orange-mango",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 1000,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 17,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "ml",
                            ProductName = "granini: pineapple",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 1000,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 18,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "ml",
                            ProductName = "granini: peach",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 1000,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 19,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "ml",
                            ProductName = "granini: Orange 100%, without pulp",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 1000,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 20,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "ml",
                            ProductName = "granini : Fruchtcocktail",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 1000,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 21,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "ml",
                            ProductName = "granini: pink grapefruit",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 1000,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 22,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "ml",
                            ProductName = "granini: My Moment, Pink Grapefruit - Cranberry",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 330,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 23,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "ml",
                            ProductName = "granini: My Moment, Lemon-Lemon",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 330,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 24,
                            Carbohydrates = 22.0,
                            Energy = 109,
                            Fat = 1.25,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 250,
                            PortionUnit = "ml",
                            ProductName = "GRANINI: 100% ORANGE",
                            ProductNo = 0,
                            Protein = 2.5,
                            Quantity = 330,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 25,
                            Carbohydrates = 27.5,
                            Energy = 114,
                            Fat = 0.5,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 250,
                            PortionUnit = "ml",
                            ProductName = "RAMSEIER: APPLE JUICE, natural",
                            ProductNo = 0,
                            Protein = 0.5,
                            Quantity = 500,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 26,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "ml",
                            ProductName = "RAMSEIER : HOCHSTÄMMER, obstsaft naturtrüe",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 500,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 27,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "ml",
                            ProductName = "granini: Fruity & tingling, apple",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 500,
                            Salt = 0.0,
                            Sugar = 0
                        },
                        new
                        {
                            ProductId = 28,
                            Carbohydrates = 0.0,
                            Energy = 0,
                            Fat = 0.0,
                            Fiber = 0,
                            IsFavorite = false,
                            PortionQuantity = 0,
                            PortionUnit = "ml",
                            ProductName = "CRISTALP",
                            ProductNo = 0,
                            Protein = 0.0,
                            Quantity = 500,
                            Salt = 0.0,
                            Sugar = 0
                        });
                });

            modelBuilder.Entity("BLL.ProductInDietPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DailyDietPlanId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPortions")
                        .HasColumnType("int");

                    b.Property<int>("OrdinalNumber")
                        .HasColumnType("int");

                    b.Property<int>("PortionSize")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("TotalCalories")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DailyDietPlanId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductInDietPlan");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BLL.DailyDietPlan", b =>
                {
                    b.HasOne("BLL.DietPlan", null)
                        .WithMany("DailyDietPlanList")
                        .HasForeignKey("DietPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BLL.ProductInDietPlan", b =>
                {
                    b.HasOne("BLL.DailyDietPlan", null)
                        .WithMany("ProductListForDay")
                        .HasForeignKey("DailyDietPlanId");

                    b.HasOne("BLL.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BLL.DailyDietPlan", b =>
                {
                    b.Navigation("ProductListForDay");
                });

            modelBuilder.Entity("BLL.DietPlan", b =>
                {
                    b.Navigation("DailyDietPlanList");
                });
#pragma warning restore 612, 618
        }
    }
}
